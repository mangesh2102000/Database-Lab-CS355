Name - Chandrawanshi Mangesh Shivaji
Roll No. - 1801CS16
// is used to add description/assumption comments 

// Sign in as root
mysql -u root -p
- Password

// dblab is already created with required tables in previous labs
use dblab;

Task to be Performed - Write MySQL queries to perform the the followings

1.->

// Add a column Status to Suppliers
alter table Suppliers                                                                                                
   add Status varchar(20); 

// procedure procSupStatus to update status for given SID

delimiter $$

create procedure procSupStatus(in supSID varchar(10))
begin 

declare age int;

	select TIMESTAMPDIFF(YEAR, DoB, CURDATE()) into age
	from Suppliers
	where SID=supSID;	

	if(age > 60) then
		update Suppliers 
		set Status = 'senior citizen' 
		where Suppliers.SID = supSID;
	else
		update Suppliers 
		set Status = 'non-senior citizen'
		where Suppliers.SID = supSID;
	end if;

end$$

delimiter ;

// procedure to update status of all suppliers in the table

delimiter $$

create procedure procUpdateSupStatus()
begin 

declare supSID1 varchar(10);
declare i int;
declare cnt int;

	select COUNT(*) into cnt
	from Suppliers;

	set i=0;

	while (i<cnt) do
		select SID into supSID1 from Suppliers limit i,1; 
		call procSupStatus(supSID1);
		set i = i+1;
	end while;

end$$

delimiter ;

// Command to update status of total table
call procUpdateSupStatus();

// Command to update status of single entry with SID = 'S001'
call procSupStatus('S001');

2.->

delimiter $$

// Procedure to insert into Products if PID is distinct from already existing ones

create procedure procProdInsert(in prodPID varchar(10), in prodPName varchar(10), in prodWarrantyPeriod smallint, in prodDoM date)
begin
declare f int;

	select EXISTS(
		select PID 
		from Products
		where Products.PID = prodPID
		) into f;

	if (f = 0) then 
		insert into Products
			value(prodPID,prodPName,prodWarrantyPeriod,prodDoM);
	end if;

end$$

delimiter ;

// Sample Insertion
call procProdInsert('P011','book','2','2020-05-28');

3. ->

delimiter $$

// Gives list of unique suppliers who have supplied parts 1 year before and after that given dt
// I have considered exactly 1 year before(and after) means difference between year part of both dates is -1(and +1)
// And both of these should satisfy for Supplier to be in the list

create procedure procSPDateSupply(in dt date)
begin

	select distinct Suppliers.SID,Suppliers.SName
	from SP INNER JOIN Suppliers
	on SP.SID = Suppliers.SID
	where TIMESTAMPDIFF(YEAR, dt, SP.DoS) = -1 and SP.SID in (
		select SID
		from SP
		where TIMESTAMPDIFF(YEAR, dt, SP.DoS) = 1
	);

end$$

delimiter ;

// Sample Call
call procSPDateSupply('2020-03-15');


4. ->

delimiter $$

// Function which returns string with req specifications 

create function funSPGenString(supSID varchar(10), prodPID varchar(10))
returns varchar(10)
deterministic
begin
	
	declare output_string varchar(10);
	declare dt date;
	declare temp_year int;
	declare s1 varchar(2);
	declare s2 varchar(2);

	select DoS into dt
	from SP
	where SID = supSID and PID = prodPID;

	if DAY(dt) >= 10 then 
		set s1 = DAY(dt);
	else
		set s1 = CONCAT(0,DAY(dt));
	end if;
	select mod(EXTRACT(year from dt),100) into temp_year;

	if temp_year >= 10 then 
		set s2 = temp_year;
	else
		set s2 = CONCAT(0,temp_year);
	end if;

	set output_string = CONCAT(SUBSTR(supSID,1,3),SUBSTR(prodPID,1,3),s1,s2);

	return (output_string);
end$$

delimiter ;

// Sample 
select funSpGenString('S001','P001');
