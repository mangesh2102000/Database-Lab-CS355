Name - Chandrawanshi Mangesh Shivaji
Roll No. - 1801CS16
// is used to add description/assumption comments 

// Setting up Permissions To use load infile instructions in later part (Task 1)

// Sign in as root
mysql -u root -p
- Password

SET GLOBAL local_infile=1;

// Exit as root
quit

// Sign in as root with load infile instructions allowed

mysql --local-infile=1 -u root -p 
- Password

Link for used csv file : Sales_records (50k entries)

https://drive.google.com/file/d/1K9azkRwLKvu0YK-Nwn82oKlL9po1PHv4/view?usp=sharing

1.1 SubTask A: Define the table and load data into it from the CSV file 
->

// Create dblab7 database
create database dblab7;

use dblab7;

// Create Sales_Records table without any constraints initially 

create table Sales_Records(
	 Region varchar(100),
	 Country varchar(80),
	 Item_type varchar(20),
	 Sales_channel varchar(20),
	 Order_priority char(1),
	 Order_date date,
	 OrderID varchar(20),
	 Ship_date date,
	 Units_sold integer,
	 Unit_price real,
	 Unit_cost real,
	 Total_revenue real,
	 Total_cost real,
	 Total_profit real,
	 Remarks varchar(10)
);

// Load Data into Sales_Records table

LOAD DATA LOCAL INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/Sales_Records.csv' INTO TABLE Sales_Records
FIELDS TERMINATED BY ',' ENCLOSED BY '"' LINES TERMINATED BY '\n' IGNORE 1 ROWS;

// In Subtask B, sales_records table will be modified, so I am creating new_sales_records table to keep the 
older (current version) which will be used in Subtask C and further

CREATE TABLE new_sales_records LIKE sales_records;

INSERT new_sales_records SELECT * from sales_records;

1.2 SubTask B: Check various queries and monitor the timings 
->
// For monitoring timing
SET profiling = 1;

// Query 1 : Find Country,OrderID of all sales records whose Country is 'India'

select Country,OrderID from sales_records where Country = 'India';

show profiles;

+----------+------------+-------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                             |
+----------+------------+-------------------------------------------------------------------+
|        1 | 0.02105375 | select Country,OrderID from sales_records where Country = 'India' |
|        2 | 0.01974600 | select Country,OrderID from sales_records where Country = 'India' |
|        3 | 0.01955950 | select Country,OrderID from sales_records where Country = 'India' |
|        4 | 0.02002950 | select Country,OrderID from sales_records where Country = 'India' |
|        5 | 0.02006000 | select Country,OrderID from sales_records where Country = 'India' |
+----------+------------+-------------------------------------------------------------------+

Avg. Duration = 0.02008975 s

// Query 2 : Find Country,OrderID of all sales records whose Total_profit lies between 100000 and 500000

select Country,OrderID from sales_records where Total_profit BETWEEN 100000 and 500000;

show profiles;

+----------+------------+----------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                              	 |
+----------+------------+----------------------------------------------------------------------------------------+ 
| 		 8 | 0.04470475 | select Country,OrderID from sales_records where Total_profit BETWEEN 100000 and 500000 |
|        9 | 0.04127525 | select Country,OrderID from sales_records where Total_profit BETWEEN 100000 and 500000 |
|       10 | 0.04123325 | select Country,OrderID from sales_records where Total_profit BETWEEN 100000 and 500000 |
|       11 | 0.04164425 | select Country,OrderID from sales_records where Total_profit BETWEEN 100000 and 500000 |
|       12 | 0.04276975 | select Country,OrderID from sales_records where Total_profit BETWEEN 100000 and 500000 |
+----------+------------+----------------------------------------------------------------------------------------+
Avg. Duration = 0.04232545 s


// Query 3 : Insert 5 relevant entries into sales records and take their avg. time

insert into sales_records
	values('Middle East and North Africa','Azerbaijan','Snacks','Online','C','2014-10-08',535113847,'2014-10-23',934,152.58,97.44,142509.72,91008.96,51500.76,''),
	('Central America and the Caribbean','Panama','Cosmetics','Offline','L','2015-02-22',874708545,'2015-02-27',4551,437.2,263.33,1989697.2,1198414.83,791282.37,''),
	('Sub-Saharan Africa','Sao Tome and Principe','Fruits','Offline','M','2015-12-09',854349935,'2016-01-18',9986,9.33,6.92,93169.38,69103.12,24066.26,''),
	('Europe','Denmark','Clothes','Online','C','2013-02-20',473105037,'2013-02-28',1149,109.28,35.84,125562.72,41180.16,84382.56,''),
	('Asia','Kazakhstan','Cosmetics','Online','H','2015-09-11',471623599,'2015-09-18',2758,437.2,263.33,1205797.6,726264.14,479533.46,'');

show profiles;

+----------+------------+---------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                              	|
+----------+------------+---------------------------------------------------------------------------------------+  
|       15 | 0.00431225 | insert into sales_records values('Middle East and North Africa','Azerbaijan',.........|
|       16 | 0.00495925 | insert into sales_records values('Middle East and North Africa','Azerbaijan',.........|
|       17 | 0.00435150 | insert into sales_records values('Middle East and North Africa','Azerbaijan',.........|
|       18 | 0.00411750 | insert into sales_records values('Middle East and North Africa','Azerbaijan',.........|
|       19 | 0.00478475 | insert into sales_records values('Middle East and North Africa','Azerbaijan',.........|
+----------+------------+---------------------------------------------------------------------------------------+

Avg. Time to insert 5 random records = 0.00450505 s

//  Query 4 : Update Remarks to 'bad' for all the sales records having Item_type as 'Beverages'

update sales_records set Remarks = 'bad' where Item_type = 'Beverages';
 
show profiles;

+----------+------------+--------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                                |
+----------+------------+--------------------------------------------------------------------------------------+   
|       20 | 0.24869675 | update sales_records set Remarks = 'bad' where Item_type = 'Beverages'  				|
|       22 | 0.41628375 | update sales_records set Remarks = 'bad' where Item_type = 'Beverages'  				|
|       24 | 0.30448425 | update sales_records set Remarks = 'bad' where Item_type = 'Beverages'  				| 
|       26 | 0.46586050 | update sales_records set Remarks = 'bad' where Item_type = 'Beverages'  				|
|       28 | 0.34135450 | update sales_records set Remarks = 'bad' where Item_type = 'Beverages'  				|
+----------+------------+---------------------------------------------------------------------------------------+

// For accurate time calculation, values are reverted back to '' after each updation

Avg. Duration = 0.35533595 s


//  Query 5 : Update Remarks to 'good' for all the sales records in Asia whose Total Profit lies between 1000000 and 2000000 

update sales_records set Remarks = 'good' where Region = 'Asia' and Total_profit BETWEEN 1000000 and 2000000;
 
show profiles;

+----------+------------+---------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                              	|
+----------+------------+---------------------------------------------------------------------------------------+  |       29 | 0.18095000 | update sales_records set Remarks = 'good' where Region = 'Asia' and Total_profit BETWEEN 1000000 and 2000000 |
|       31 | 0.10280650 | update sales_records set Remarks = 'good' where Region = 'Asia' and Total_profit BETWEEN 1000000 and 2000000 |
|       33 | 0.12150925 | update sales_records set Remarks = 'good' where Region = 'Asia' and Total_profit BETWEEN 1000000 and 2000000 |
|       35 | 0.11640900 | update sales_records set Remarks = 'good' where Region = 'Asia' and Total_profit BETWEEN 1000000 and 2000000 |
|       37 | 0.13614000 | update sales_records set Remarks = 'good' where Region = 'Asia' and Total_profit BETWEEN 1000000 and 2000000 |
+----------+------------+---------------------------------------------------------------------------------------+

// For accurate time calculation, values are reverted back to '' after each updation

Avg. Duration = 0.13156295 s


1.3 SubTask C: Create index on the copied table 
->

// New Table with data from earlier table is already created at the end of subtask A (new_sales_records)
// from here on it will used for creating index and processing queries

// First index is created on OrderID which is almost unique for all entries (may have some repetitions)

alter table new_sales_records
	add index idx_ordid(OrderID);

// We have used Country and Total_profit for query purpose so creating index on both of them might be beneficial 

create index idx_country on new_sales_records(Country);

create index idx_total_profit on new_sales_records(Total_profit);

// Though index creation may (need not always) fasten select queries it slows down insertion and updation. So, unnecessary index creation should be avoided	


1.4 SubTask D: Check various queries and monitor the timings 

// For monitoring timing
SET profiling = 1;

// Query 1 : Find Country,OrderID of all sales records whose Country is 'India'

select Country,OrderID from new_sales_records where Country = 'India';

show profiles;

+----------+------------+-----------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                 |
+----------+------------+-----------------------------------------------------------------------+
|       10 | 0.00132950 | select Country,OrderID from new_sales_records where Country = 'India'   |
|       11 | 0.00093800 | select Country,OrderID from new_sales_records where Country = 'India'   |
|       12 | 0.00173900 | select Country,OrderID from new_sales_records where Country = 'India'   |
|       13 | 0.00086400 | select Country,OrderID from new_sales_records where Country = 'India'   |
|       14 | 0.00085750 | select Country,OrderID from new_sales_records where Country = 'India'   |
+----------+------------+-----------------------------------------------------------------------+

Avg. Duration = 0.0011456 s

// Query 2 : Find Country,OrderID of all sales records whose Total_profit lies between 100000 and 500000

select Country,OrderID from new_sales_records where Total_profit BETWEEN 100000 and 500000;

show profiles;

+----------+------------+----------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                              	 |
+----------+------------+----------------------------------------------------------------------------------------+ 
|       52 | 0.04152000 | select Country,OrderID from new_sales_records where Total_profit BETWEEN 100000 and 500000 |
|       53 | 0.04171225 | select Country,OrderID from new_sales_records where Total_profit BETWEEN 100000 and 500000 |
|       54 | 0.04196475 | select Country,OrderID from new_sales_records where Total_profit BETWEEN 100000 and 500000 |
|       55 | 0.04171625 | select Country,OrderID from new_sales_records where Total_profit BETWEEN 100000 and 500000 |
|       56 | 0.04198925 | select Country,OrderID from new_sales_records where Total_profit BETWEEN 100000 and 500000 |
|       57 | 0.04156625 | select Country,OrderID from new_sales_records where Total_profit BETWEEN 100000 and 500000 |+----------+------------+----------------------------------------------------------------------------------------+
Avg. Duration = 0.041744792 s


// Query 3 : Insert 5 relevant entries into sales records and take their avg. time

insert into new_sales_records
	values('Middle East and North Africa','Azerbaijan','Snacks','Online','C','2014-10-08',535113847,'2014-10-23',934,152.58,97.44,142509.72,91008.96,51500.76,''),
	('Central America and the Caribbean','Panama','Cosmetics','Offline','L','2015-02-22',874708545,'2015-02-27',4551,437.2,263.33,1989697.2,1198414.83,791282.37,''),
	('Sub-Saharan Africa','Sao Tome and Principe','Fruits','Offline','M','2015-12-09',854349935,'2016-01-18',9986,9.33,6.92,93169.38,69103.12,24066.26,''),
	('Europe','Denmark','Clothes','Online','C','2013-02-20',473105037,'2013-02-28',1149,109.28,35.84,125562.72,41180.16,84382.56,''),
	('Asia','Kazakhstan','Cosmetics','Online','H','2015-09-11',471623599,'2015-09-18',2758,437.2,263.33,1205797.6,726264.14,479533.46,'');

show profiles;

+----------+------------+---------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                              	|
+----------+------------+---------------------------------------------------------------------------------------+  
|       15 | 0.00424125 | insert into new_sales_records values('Middle East and North Africa','Azerbaijan',.....|
|       16 | 0.00424125 | insert into new_sales_records values('Middle East and North Africa','Azerbaijan',.....|
|       17 | 0.00421275 | insert into new_sales_records values('Middle East and North Africa','Azerbaijan',.....|
|       18 | 0.00411000 | insert into new_sales_records values('Middle East and North Africa','Azerbaijan',.....|
|       19 | 0.00448250 | insert into new_sales_records values('Middle East and North Africa','Azerbaijan',.....|
+----------+------------+---------------------------------------------------------------------------------------+

Avg. Time to insert 5 random records = 0.00425755 s

//  Query 4 : Update Remarks to 'bad' for all the sales records having Item_type as 'Beverages'

update new_sales_records set Remarks = 'bad' where Item_type = 'Beverages';
 
show profiles;

+----------+------------+--------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                                |
+----------+------------+--------------------------------------------------------------------------------------+   
|       23 | 0.21621425 | update new_sales_records set Remarks = 'bad' where Item_type = 'Beverages' |
|       25 | 0.43111775 | update new_sales_records set Remarks = 'bad' where Item_type = 'Beverages' |
|       27 | 0.24603375 | update new_sales_records set Remarks = 'bad' where Item_type = 'Beverages' |
|       29 | 0.41338450 | update new_sales_records set Remarks = 'bad' where Item_type = 'Beverages' |
|       31 | 0.47359600 | update new_sales_records set Remarks = 'bad' where Item_type = 'Beverages' |
+----------+------------+---------------------------------------------------------------------------------------+

// For accurate time calculation, values are reverted back to '' after each updation

Avg. Duration = 0.35606925 s


//  Query 5 : Update Remarks to 'good' for all the sales records in Asia whose Total Profit lies between 1000000 and 2000000 

update new_sales_records set Remarks = 'good' where Region = 'Asia' and Total_profit BETWEEN 1000000 and 2000000;
 
show profiles;

+----------+------------+---------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                              	|
+----------+------------+---------------------------------------------------------------------------------------+  |       35 | 0.12185500 | update new_sales_records set Remarks = 'good' where Region = 'Asia' and Total_profit BETWEEN 1000000 and 2000000 |
|       37 | 0.15017675 | update new_sales_records set Remarks = 'good' where Region = 'Asia' and Total_profit BETWEEN 1000000 and 2000000 |
|       39 | 0.11250850 | update new_sales_records set Remarks = 'good' where Region = 'Asia' and Total_profit BETWEEN 1000000 and 2000000 |
|       41 | 0.15859025 | update new_sales_records set Remarks = 'good' where Region = 'Asia' and Total_profit BETWEEN 1000000 and 2000000 |
|       43 | 0.12816300 | update new_sales_records set Remarks = 'good' where Region = 'Asia' and Total_profit BETWEEN 1000000 and 2000000 |
+----------+------------+---------------------------------------------------------------------------------------+

// For accurate time calculation, values are reverted back to '' after each updation

Avg. Duration = 0.1342587 s

1.5 SubTask E: Perform Comparative Analysis

								Avg. Duration   		Avg. Duration         Change in Percentage
								without	Indexing(s)    	With Indexing(s) 			  (%)
Query1 (SELECT equality)			0.02008975			  0.0011456            94.2976% decrease
Query2 (SELECT range)				0.04232545			  0.041744792 		   1.37189% decrease
Query3 (INSERT)						0.00450505			  0.00425755		   5.49383% decrease
Query4 (UPDATE equality)			0.35533595			  0.3560692			   0.206354% increase
Query5 (UPDATE range)			    0.13156295	     	  0.1342587			   2.04902% increase


So ,in general we can conclude that - The UPDATE statements take more time on tables having indexes, whereas the 
SELECT statements become fast on those tables.The reason is that while doing update, a database needs to insert or
 update the index values as well (same is true for insertion).Insertion may also be slow in general cases with 
 indexing though here it has very minute increase in speed processing (It is due to insertion of same record 
 multiple times that speed has increased)



Used csv file : transactions (16k entries)
Available on Course_Page

// Create transactions table without any constraints initially 

create table Transactions(
	Series_reference varchar(20),
	Period float,
	Data_value float,
	Suppressed varchar(20),
	STATUS char(1),
	UNITS varchar(25),
	Magnitude smallint,
	Subject varchar(200),
	Group1 varchar(200),
	Series_title_1 varchar(300),
	Series_title_2 varchar(300),
	Series_title_3 varchar(300),
	Series_title_4 varchar(300),
	Series_title_5 varchar(300)
);

// Load Data into Transactions table

LOAD DATA LOCAL INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/transactions.csv' INTO TABLE Transactions 
FIELDS TERMINATED BY ',' ENCLOSED BY '"' LINES TERMINATED BY '\n' IGNORE 1 ROWS;

// In Subtask B, transactions table will be modified, so I am creating new_transactions table to keep the 
older (current version) which will be used in Subtask C and further

CREATE TABLE new_transactions LIKE transactions;

INSERT new_transactions SELECT * from transactions;


1.2 SubTask B: Check various queries and monitor the timings 
->
// For monitoring timing
SET profiling = 1;

// Query 1 : Find Series_reference,Period of all transactions whose STATUS is 'C'

select Series_reference,Period from transactions where STATUS = 'C';

show profiles;

+----------+------------+-------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                             |
+----------+------------+-------------------------------------------------------------------+
|       89 | 0.00827175 | select Series_reference,Period from transactions where STATUS = 'C'                 |
|       90 | 0.00769100 | select Series_reference,Period from transactions where STATUS = 'C'                 |
|       91 | 0.00705900 | select Series_reference,Period from transactions where STATUS = 'C'                 |
|       92 | 0.00743325 | select Series_reference,Period from transactions where STATUS = 'C'                 |
|       93 | 0.00790450 | select Series_reference,Period from transactions where STATUS = 'C'                 |+----------+------------+-------------------------------------------------------------------+

Avg. Duration = 0.0076719 s

// Query 2 : Find Series_reference,STATUS of all transactions whose Period lies between 2005 and 2010

select Series_reference,STATUS from transactions where Period BETWEEN 2005 and 2010;

show profiles;

+----------+------------+----------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                              	 |
+----------+------------+----------------------------------------------------------------------------------------+ 
|       77 | 0.00910450 | select Series_reference,STATUS from transactions where Period BETWEEN 2005 and 2010 |
|       78 | 0.00720900 | select Series_reference,STATUS from transactions where Period BETWEEN 2005 and 2010 |
|       79 | 0.00777500 | select Series_reference,STATUS from transactions where Period BETWEEN 2005 and 2010 |
|       80 | 0.00733875 | select Series_reference,STATUS from transactions where Period BETWEEN 2005 and 2010 |
|       81 | 0.00704275 | select Series_reference,STATUS from transactions where Period BETWEEN 2005 and 2010 |
+----------+------------+----------------------------------------------------------------------------------------+
Avg. Duration = 0.007694 s


// Query 3 : Insert 5 relevant entries into transactions and take their avg. time

insert into transactions
	values('ECTA.S19AX','2020.04','144.001','','F','Rupees',6,'Electronic Card Transactions (ANZSIC46) - ECT',
		'Total values - Electronic card transactions A/S/T by division','Actual','RTS total industries','Something1','',''),
	('ECTA.S19AY','2020.06','94445.001','','F','Rupees',0,'Electronic Card Transactions (ANZSIC26) - ECT',
		'Total values - Electronic card transactions A/S/T by division','Actual','RTS total industries','Something2','',''),
	('ECTA.S19AZ','2020.12','2344.00231','','F','Dollars',0,'Electronic Card Transactions (ANZSIC16) - ECT',
		'Total values - Electronic card transactions A/S/T by division','Actual','RTS total industries','Something3','',''),
	('ECTA.S19AA','2020.07','124544.01231','','F','Dollars',6,'Electronic Card Transactions (ANZSIC56) - ECT',
		'Total values - Electronic card transactions A/S/T by division','Actual','RTS total industries','Something4','',''),
	('ECTA.S19AB','2012.01','115644.001','','F','Dollars',6,'Electronic Card Transactions (ANZSIC66) - ECT',
		'Total values - Electronic card transactions A/S/T by division','Actual','RTS total industries','Something5','','');

show profiles;

+----------+------------+---------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                              	|
+----------+------------+---------------------------------------------------------------------------------------+  
|       96 | 0.00428650 | insert into transactions ... |
|       97 | 0.00482175 | insert into transactions ... |
|       98 | 0.00470200 | insert into transactions ... |
|       99 | 0.00475275 | insert into transactions ... |
|      100 | 0.00445075 | insert into transactions ... |
+----------+------------+---------------------------------------------------------------------------------------+

Avg. Time to insert 5 random records = 0.00460275 s

//  Query 4 : Update UNITS to 'yen' for all transactions having status 'F'

update transactions set UNITS = 'yen' where STATUS = 'F';
 
show profiles;

+----------+------------+--------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                                |
+----------+------------+--------------------------------------------------------------------------------------+   
|      101 | 0.14811175 | update transactions set UNITS = 'yen' where STATUS = 'F'                               |
|      103 | 0.18733125 | update transactions set UNITS = 'yen' where STATUS = 'F'                               |
|      105 | 0.16316125 | update transactions set UNITS = 'yen' where STATUS = 'F'                               |
|      107 | 0.14976250 | update transactions set UNITS = 'yen' where STATUS = 'F'                               |
|      109 | 0.15018700 | update transactions set UNITS = 'yen' where STATUS = 'F'                               |
+----------+------------+---------------------------------------------------------------------------------------+

// For accurate time calculation, values are reverted back to '' after each updation

Avg. Duration = 0.15971075 s


//  Query 5 : Update STATUS to 'F' for all the transactions whose Period lies between 2005 and 2010

update transactions set STATUS = 'F' where Period BETWEEN 2005 and 2010;
 
show profiles;

+----------+------------+---------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                              	|
+----------+------------+---------------------------------------------------------------------------------------+  |      105 | 0.07157850 | update transactions set STATUS = 'F' where Period BETWEEN 2005 and 2010 
|      107 | 0.06892925 | update transactions set STATUS = 'F' where Period BETWEEN 2005 and 2010 
|      109 | 0.07443825 | update transactions set STATUS = 'F' where Period BETWEEN 2005 and 2010 
|      111 | 0.06904600 | update transactions set STATUS = 'F' where Period BETWEEN 2005 and 2010  
|      113 | 0.07683650 | update transactions set STATUS = 'F' where Period BETWEEN 2005 and 2010                     
+----------+------------+---------------------------------------------------------------------------------------+

// For accurate time calculation, values are reverted back to '' after each updation

Avg. Duration = 0.0721657 s


1.3 SubTask C: Create index on the copied table 
->

// New Table with data from earlier table is already created at the end of subtask A (new_sales_records)
// from here on it will used for creating index and processing queries

// First index is created on OrderID which is almost unique for all entries (may have some repetitions)

alter table new_transactions
	add index idx_sr(Series_reference);

// We have used Period and STATUS for query purpose so creating index on both of them might be beneficial 

create index idx_per on new_transactions(Period);

create index idx_sta on new_transactions(STATUS);

// Though index creation may (need not always) fasten select queries it slows down insertion and updation. So, unnecessary index creation should be avoided	


1.4 SubTask D: Check various queries and monitor the timings 

// For monitoring timing
SET profiling = 1;

// Query 1 : Find Series_reference,Period of all transactions whose STATUS is 'C'

select Series_reference,Period from new_transactions where STATUS = 'C';

show profiles;

+----------+------------+-------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                             |
+----------+------------+-------------------------------------------------------------------+
|      118 | 0.00174250 | select Series_reference,Period from new_transactions where STATUS = 'C' |
|      119 | 0.00166775 | select Series_reference,Period from new_transactions where STATUS = 'C' |
|      120 | 0.00167775 | select Series_reference,Period from new_transactions where STATUS = 'C' |
|      121 | 0.00171400 | select Series_reference,Period from new_transactions where STATUS = 'C' |
|      122 | 0.00165400 | select Series_reference,Period from new_transactions where STATUS = 'C' ||+----------+------------+-------------------------------------------------------------------+

Avg. Duration = 0.0016912 s

// Query 2 : Find Series_reference,STATUS of all transactions whose Period lies between 2005 and 2010

select Series_reference,STATUS from new_transactions where Period BETWEEN 2005 and 2010;

show profiles;

+----------+------------+----------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                              	 |
+----------+------------+----------------------------------------------------------------------------------------+ 
     128   | 0.00766325 | select Series_reference,STATUS from new_transactions where Period BETWEEN 2005 and 2010 |
|      129 | 0.00720575 | select Series_reference,STATUS from new_transactions where Period BETWEEN 2005 and 2010 |
|      130 | 0.00702850 | select Series_reference,STATUS from new_transactions where Period BETWEEN 2005 and 2010 |
|      131 | 0.00736350 | select Series_reference,STATUS from new_transactions where Period BETWEEN 2005 and 2010 |
|      132 | 0.00722100 | select Series_reference,STATUS from new_transactions where Period BETWEEN 2005 and 2010 |
+----------+------------+----------------------------------------------------------------------------------------+
Avg. Duration = 0.0072964 s


// Query 3 : Insert 5 relevant entries into transactions and take their avg. time

insert into new_transactions
	values('ECTA.S19AX','2020.04','144.001','','F','Rupees',6,'Electronic Card Transactions (ANZSIC46) - ECT',
		'Total values - Electronic card transactions A/S/T by division','Actual','RTS total industries','Something1','',''),
	('ECTA.S19AY','2020.06','94445.001','','F','Rupees',0,'Electronic Card Transactions (ANZSIC26) - ECT',
		'Total values - Electronic card transactions A/S/T by division','Actual','RTS total industries','Something2','',''),
	('ECTA.S19AZ','2020.12','2344.00231','','F','Dollars',0,'Electronic Card Transactions (ANZSIC16) - ECT',
		'Total values - Electronic card transactions A/S/T by division','Actual','RTS total industries','Something3','',''),
	('ECTA.S19AA','2020.07','124544.01231','','F','Dollars',6,'Electronic Card Transactions (ANZSIC56) - ECT',
		'Total values - Electronic card transactions A/S/T by division','Actual','RTS total industries','Something4','',''),
	('ECTA.S19AB','2012.01','115644.001','','F','Dollars',6,'Electronic Card Transactions (ANZSIC66) - ECT',
		'Total values - Electronic card transactions A/S/T by division','Actual','RTS total industries','Something5','','');

show profiles;

+----------+------------+---------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                              	|
+----------+------------+---------------------------------------------------------------------------------------+  
|      135 | 0.00481875 | insert into new_transactions
|      136 | 0.00502500 | insert into new_transactions
|      137 | 0.00446425 | insert into new_transactions
|      138 | 0.00492200 | insert into new_transactions
|      139 | 0.00483375 | insert into new_transactions
+----------+------------+---------------------------------------------------------------------------------------+

Avg. Time to insert 5 random records = 0.00481275 s

//  Query 4 : Update UNITS to 'yen' for all transactions having status 'F'

update new_transactions set UNITS = 'yen' where STATUS = 'F';
 
show profiles;

+----------+------------+--------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                                |
+----------+------------+--------------------------------------------------------------------------------------+   
|      101 | 0.15933350 | update new_transactions set UNITS = 'yen' where STATUS = 'F'                               |
|      103 | 0.18733125 | update new_transactions set UNITS = 'yen' where STATUS = 'F'                               |
|      105 | 0.17526125 | update new_transactions set UNITS = 'yen' where STATUS = 'F'                               |
|      107 | 0.15885350 | update new_transactions set UNITS = 'yen' where STATUS = 'F'                               |
|      109 | 0.16018700 | update new_transactions set UNITS = 'yen' where STATUS = 'F'                               |
+----------+------------+---------------------------------------------------------------------------------------+

// For accurate time calculation, values are reverted back to '' after each updation

Avg. Duration = 0.1681933 s


//  Query 5 : Update STATUS to 'F' for all the transactions whose Period lies between 2005 and 2010

update new_transactions set STATUS = 'F' where Period BETWEEN 2005 and 2010;
 
show profiles;

+----------+------------+---------------------------------------------------------------------------------------+
| Query_ID | Duration   | Query                                                                              	|
+----------+------------+---------------------------------------------------------------------------------------+  |      105 | 0.13744725 | update new_transactions set STATUS = 'F' where Period BETWEEN 2005 and 2010 
|      107 | 0.14245775 | update new_transactions set STATUS = 'F' where Period BETWEEN 2005 and 2010 
|      109 | 0.15788725 | update new_transactions set STATUS = 'F' where Period BETWEEN 2005 and 2010 
|      111 | 0.12725275 | update new_transactions set STATUS = 'F' where Period BETWEEN 2005 and 2010  
|      113 | 0.11234725 | update new_transactions set STATUS = 'F' where Period BETWEEN 2005 and 2010                     
+----------+------------+---------------------------------------------------------------------------------------+

// For accurate time calculation, values are reverted back to '' after each updation

Avg. Duration = 0.13547845 s


1.5 SubTask E: Perform Comparative Analysis

								Avg. Duration   		Avg. Duration         
								without	Indexing(s)    	With Indexing(s) 			  
Query1 (SELECT equality)			0.02008975			  0.0016912            decrease
Query2 (SELECT range)				0.04232545			  0.0072964		       decrease
Query3 (INSERT)						0.00460275			  0.00481275		   increase
Query4 (UPDATE equality)			0.15971075			  0.1681933			   increase
Query5 (UPDATE range)			    0.0721657	     	  0.13547845		   increase


So ,in general we can conclude that - The INSERT and UPDATE statements take more time on tables having indexes, whereas 
the SELECT statements become fast on those tables.The reason is that while doing insert and update, a database needs to 
insert or  update the index values as well.