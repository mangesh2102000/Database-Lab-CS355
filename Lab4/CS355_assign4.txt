Name - Chandrawanshi Mangesh Shivaji
Roll No. - 1801CS16
// is used to add description comments 

// Sign in as scot
mysql -u scot -p 
- Password

// Use existing database
use dblab;

Task A :

// Add email attribute to Suppliers
alter table Suppliers
	add email varchar(20);

// Add weight attribute to Products
alter table Products
	add weight int unsigned;

// Insert new entries into Suppliers
insert into Suppliers
	values('sup0001','Aaryavarat','Dehradun','arya03@gmail.com'),
	('sup0002','Abhijeet','Digras','abhi15@hotmail.com'),
	('sup0003','Harsh','Agra','cache19@hotmail.com'),
	('sup0004','Devanshu','Patna','dev02@gmail.com'),
	('sup0005','Pranay','Delhi','pranay21@yahoo.com');

// Insert new entries into Products
insert into Products
	values('prd-001','table',3,'2020-09-10',5000),
	('prd-010','chair',1,'2020-08-10',2000),
	('prd-003','watch',3,'2020-09-05',100),
	('prd-1221','lock',1,'2020-08-10',200),
	('prd-5678','bag',2,'2020-09-10',875);

// Insert new entries into SP
insert into SP
	values('sup0001','prd-001',3),
	('sup0001','prd-010',2),
	('sup0001','prd-003',4),
	('sup0001','prd-1221',8),
	('sup0001','prd-5678',1),
	('sup0002','prd-003',3),
	('sup0003','prd-1221',5),
	('sup0004','prd-010',10),
	('sup0005','prd-001',3);


Task B : 

#1) For each PID of Products table, extract only the number part from PIDs
-> 
	select substring(PID, 5, char_length(PID)-4) from Products;

#2) For each entry of SP table, display SID, PID and OrderID. Here, OrderID needs to be derived from SID and PID 
Let’s say SID is ‘sup1221’ and PID is ‘prd-373’ then OrderID will be ‘*sup1221@prd-373#’
-> 
	select SID,PID, concat('*',SID,'@',PID,'#') as OrderID from SP;

// OrderID is just displayed not stored as an attribute

#3) For each entry of Suppliers table, display the SID by replacing the ‘sup’ string of SIDs with ‘sppl’ string
-> 
	select replace(SID, 'sup', 'sppl') from Suppliers; 

// Original SID content is not changed 

#4) Find the unique domain name from the email attribute. Domain name refers to the string after ‘@’ of email value
-> 
	select distinct substring(email, locate('@',email,1) + 1, char_length(email) - locate('@',email,1) ) as Domain from Suppliers;

#5) For each PID of Product table, display the PID, weight and the weight_in_kg
-> 
	select PID,weight, (weight/1000.0) as weight_in_kg from Products;

// weight_in_kg is just displayed not stored as an attribute

#6) For each PID, check whether the numeric field of each PID is a palindrome or not
-> 
	select PID 
		from Products
		where substring(PID, 5, char_length(PID)-4) = reverse(substring(PID, 5, char_length(PID)-4)); 

// Only PIDs having numeric field as palindrome are returned

#7) Find the details of Suppliers who have supplied atleast one product with WarrantyPeriod greater than 2
-> 
	select distinct Suppliers.SID,SName,City,email
		from Suppliers,SP
		where Suppliers.SID = SP.SID and SP.PID in (
			select Products.PID
			from Products
			where WarrantyPeriod > 2
		);

// For details of suplliers along with products
	select *
	from Suppliers,SP
	where Suppliers.SID = SP.SID and SP.PID in (
		select Products.PID
		from Products
		where WarrantyPeriod > 2
	);


#8) Find the SID who have supplied all items
->  
	select distinct x.SID from SP as x 
	where not exists
		(select PID from Products as y 
	where not exists
		(select SID,PID from SP as z where z.SID = x.SID and z.PID = y.PID ));

// Insert new entries into Products
insert into Products
	values('prd-211','ball',1,'2020-09-10',150),
	('prd-320','bat',2,'2020-08-10',1300);

#9) Create a view to list the products which have not been supplied by any suppliers so far
->
	// Creation of view
	create view not_supplied_products as 
	select * from Products
	where Products.PID not in(
		select distinct SP.PID
		from SP
	);

	// Display created view
	select * from not_supplied_products;

#10) Create a view to show the list of SIDs who have never supplied more than 5 quantity items in a single purchase
->
	// Creation of view
	create view conditional_sids as
	select SID from Suppliers
	where Suppliers.SID not in(
		select SP.SID
		from SP
		where Qty > 5
	);

	// Display created view
	select * from conditional_sids;